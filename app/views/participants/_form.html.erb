<%#
  du7f - a simple web app for simple polls
  Copyright (C) 2011  Adrian Friedli <adi@koalatux.ch>

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.


%>
<% @title = @poll.title %>
<% content_for :head do %>
  <%# colors for answers %>
  <style type="text/css">
    /*<![CDATA[*/
    <% @poll.answer_set.each do |answer_key, answer| %>
      <%= "td.answer-#{answer_key} { background-color: #{answer[:color]}; }" %>
    <% end %>
    /*]]>*/
  </style>
<% end %>

<%= error_messages_for 'participant' %>
<%= error_messages_for 'comment' %>

<p>
  <b>Author:</b>
  <%=h @poll.author %>
</p>

<p>
  <b>Title:</b>
  <%=h @poll.title %>
</p>

<p>
  <b>Created at:</b>
  <%=h @poll.created_at.getlocal %>
</p>

<% if @poll.enable_close_at %>
  <p>
    <b>Closes at:</b>
    <%=h @poll.close_at.getlocal %>
  </p>
<% end %>

<div>
  <b>Description:</b><br />
  <%= auto_link(simple_format(h @poll.description), :html => { :rel => "nofollow" }) %>
</div>

<% def poll_table(f=nil) %>
  <%= if f
      # prepare radio buttons and print mapping to choice_ids
      # can't do this inline, fields_for has to be the outer loop
      radio_buttons = []
      choice_mappings = ''
      f.fields_for :entries do |ef|
        b = @poll.answer_set.map do |answer_key, _|
          [ answer_key, ef.radio_button(:answer, answer_key) ]
        end
        radio_buttons << Hash[b]
        choice_mappings << ef.hidden_field(:choice_id) + "\n"
      end
      choice_mappings
    end
  %>
  <table id="poll">

    <%# table header %>
    <tr>
      <th class="name">Name</th>
      <% @poll.choices.each do |choice| %>
        <th class="choice"><%=h choice.title %></th>
      <% end %>
    </tr>

    <% @participants.each_with_index do |participant, p_i| %>
      <% if participant != @participant %>

        <%# show participants %>
        <tr>
          <td class="name"><%=h participant.name %></td>
          <%# TODO: handle event, when there are gaps %>
          <% participant.entries.each do |entry| %>
            <td class="choice answer-<%= entry.answer %>"><%=h @poll.answer_set[entry.answer][:name] %></td>
          <% end %>
          <% if params[:action] == "index" && @poll.open? %>
            <td class="action">
              <%= link_to 'Edit', edit_participant_path(@poll, participant) %>
              <%= link_to 'Destroy', destroy_participant_path(@poll, participant) %>
            </td>
          <% end %>
        </tr>

      <% elsif f %>

        <%# empty row before edit %>
        <% if p_i != 0 %>
          <tr class="empty"><td></td><td colspan="<%= @poll.choices.size %>"></td><td></td></tr>
        <% end %>

        <%# edit participant %>
        <% @poll.answer_set.each_with_index do |answer, i| %>
          <% answer_key = answer[0]; answer_name = answer[1][:name] %>
          <tr>
            <% if i == 0 %>
              <td rowspan="<%=h @poll.answer_set.size %>" class="name">
                <%= f.text_field :name %><br />
                <%= submit_tag %>
                <%= link_to 'Cancel', participants_path %>
                <% unless participant.new_record? %>
                  <%= link_to 'Destroy', destroy_participant_path %>
                <% end %>
              </td>
            <% end %>
            <% radio_buttons.each do |button| %>
              <td class="choice answer-<%= answer_key %>"><%= button[answer_key] %></td>
            <% end %>
            <td class="answer"><%=h answer_name %></td>
          </tr>
        <% end %>

        <%# empty row after edit %>
        <% if p_i != @participants.size - 1 %>
          <tr class="empty"><td></td><td colspan="<%= @poll.choices.size %>"></td><td></td></tr>
        <% end %>

      <% end %>
    <% end %>

    <tr class="empty"><td></td><td colspan="<%= @poll.choices.size %>"></td><td></td></tr>

    <%# show results %>
    <% @poll.answer_set.each do |answer_key, answer| %>
      <tr>
        <td class="empty"></td>
        <% @poll.choices.each do |choice| %>
          <td class="total answer-<%= answer_key %>"><%=h choice.count_answers(answer_key) %></td>
        <% end %>
        <td class="answer">Total <%=h answer[:name]%></td>
      </tr>
    <% end %>

  </table>
<% end %>

<% if @participant && @poll.open? %>
  <% form_for @participant, :url => form_url do |f| %>
    <% poll_table f %>
  <% end %>
<% else %>
  <% poll_table %>
<% end %>

<% unless @poll.open? %>
  <p>This poll has been closed.</p>
<% end %>


<% if @poll.comments_allowed || @comments.size > 0 %>
  <h2>Comments</h2>
  <% @comments.each do |comment| %>
    <div class="comment">
      <b>Name:</b>
      <%= h comment.name %><br />
      <b>Date:</b>
      <%=h comment.created_at.getlocal %><br />
      <%= auto_link(simple_format(h comment.comment), :html => { :rel => "nofollow" }) %>
      <% if @poll.comments_allowed && params[:action] == "index" %>
        <%#= link_to 'Edit', edit_comment_path(@poll, comment) %>
        <%= link_to 'Destroy', destroy_comment_path(@poll, comment) %>
      <% end %>
    </div>
  <% end %>
  <% if @comment %>
    <% form_for @comment do |f| %>
      <p>
        <%= f.label :name %>
        <%= f.text_field :name %><br />
        <%= f.text_area :comment %><br />
        <%= submit_tag 'Add Comment' %>
        <%= link_to 'Cancel', participants_path %>
      </p>
    <% end %>
  <% end %>
<% end %>
